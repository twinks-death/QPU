name: CMake on GCC/Clang (Cross-platform)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: windows-latest
            c_compiler: clang
            cpp_compiler: clang++

        exclude:
          - os: windows-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4

      - name: Install MinGW (if needed for Clang on Windows)
        if: matrix.os == 'windows-latest'
        run: choco install mingw -y

      - name: Set up build directory path
        id: vars
        shell: bash
        run: echo "out_dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -G "${{ matrix.os == 'windows-latest' && 'MinGW Makefiles' || 'Unix Makefiles' }}"
          -B ${{ steps.vars.outputs.out_dir }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.vars.outputs.out_dir }} --config ${{ matrix.build_type }}

      - name: Run Tests
        working-directory: ${{ steps.vars.outputs.out_dir }}
        run: ctest --build-config ${{ matrix.build_type }}
